---
import { getCollection } from 'astro:content';
import I18nKey from '../i18n/i18nKey';
import { i18n } from '../i18n/translation';
import MainGridLayout from '../layouts/MainGridLayout.astro';
import { url } from '../utils/url-utils';

const posts = await getCollection('posts', ({ data }) => {
	return import.meta.env.PROD ? data.draft !== true : true;
});

// Group posts by category
const categories = new Map();

for (const post of posts) {
	const category = post.data.category || 'Uncategorized';
	if (!categories.has(category)) {
		categories.set(category, []);
	}
	categories.get(category)!.push(post);
}

// Sort categories by post count (descending)
const sortedCategories = Array.from(categories.entries()).sort((a, b) => b[1].length - a[1].length);
---

<MainGridLayout title={i18n(I18nKey.categories)} description="Browse posts by categories">
    <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
        <div class="card-base z-10 px-9 py-6 relative w-full">
            <div class="flex flex-row items-center mb-4">
                <div class="w-8 h-8 rounded-full bg-[var(--primary)] flex items-center justify-center mr-3">
                    <i class="fa-solid fa-folder text-white text-sm"></i>
                </div>
                <div class="text-2xl font-bold text-[var(--primary)]">
                    {i18n(I18nKey.categories)}
                </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {sortedCategories.map(([category, categoryPosts]) => (
                    <div class="bg-[var(--card-bg)] hover:bg-[var(--hover-color)] rounded-lg p-4 transition-colors duration-200">
                        <div class="flex items-center justify-between mb-2">
                            <h3 class="text-lg font-semibold text-[var(--primary)]">
                                {category}
                            </h3>
                            <span class="bg-[var(--primary)] text-white text-xs px-2 py-1 rounded-full">
                                {categoryPosts.length}
                            </span>
                        </div>
                        
                        <div class="space-y-2">
                            {categoryPosts.slice(0, 3).map((post: any) => (
                                <a 
                                    href={url(`/posts/${post.slug}/`)}
                                    class="block text-sm text-[var(--content-text-color)] hover:text-[var(--primary)] transition-colors duration-200 truncate"
                                >
                                    {post.data.title}
                                </a>
                            ))}
                            
                            {categoryPosts.length > 3 && (
                                <div class="text-xs text-[var(--meta-text-color)]">
                                    +{categoryPosts.length - 3} more posts
                                </div>
                            )}
                        </div>
                        
                        <div class="mt-3">
                            <a 
                                href={url(`/archive/?category=${encodeURIComponent(category)}`)}
                                class="text-xs text-[var(--primary)] hover:underline font-medium"
                            >
                                View all â†’
                            </a>
                        </div>
                    </div>
                ))}
            </div>
            
            {sortedCategories.length === 0 && (
                <div class="text-center py-8 text-[var(--meta-text-color)]">
                    <i class="fa-solid fa-folder-open text-4xl mb-4 opacity-50"></i>
                    <p>No categories found.</p>
                </div>
            )}
        </div>
    </div>
</MainGridLayout> 