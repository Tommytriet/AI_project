---
import { getCollection } from 'astro:content';
import I18nKey from '../i18n/i18nKey';
import { i18n } from '../i18n/translation';
import MainGridLayout from '../layouts/MainGridLayout.astro';
import { url } from '../utils/url-utils';

const posts = await getCollection('posts', ({ data }) => {
	return import.meta.env.PROD ? data.draft !== true : true;
});

// Group posts by tags
const tags = new Map();

for (const post of posts) {
	const postTags = post.data.tags || [];
	for (const tag of postTags) {
		if (!tags.has(tag)) {
			tags.set(tag, []);
		}
		tags.get(tag)!.push(post);
	}
}

// Sort tags by post count (descending)
const sortedTags = Array.from(tags.entries()).sort((a, b) => b[1].length - a[1].length);

// Function to get tag size class based on post count
function getTagSizeClass(count: number, maxCount: number) {
	const ratio = count / maxCount;
	if (ratio >= 0.8) return 'text-2xl';
	if (ratio >= 0.6) return 'text-xl';
	if (ratio >= 0.4) return 'text-lg';
	if (ratio >= 0.2) return 'text-base';
	return 'text-sm';
}

const maxTagCount = sortedTags.length > 0 ? sortedTags[0][1].length : 1;
---

<MainGridLayout title={i18n(I18nKey.tags)} description="Browse posts by tags">
    <div class="flex w-full rounded-[var(--radius-large)] overflow-hidden relative min-h-32">
        <div class="card-base z-10 px-9 py-6 relative w-full">
            <div class="flex flex-row items-center mb-6">
                <div class="w-8 h-8 rounded-full bg-[var(--primary)] flex items-center justify-center mr-3">
                    <i class="fa-solid fa-tags text-white text-sm"></i>
                </div>
                <div class="text-2xl font-bold text-[var(--primary)]">
                    {i18n(I18nKey.tags)}
                </div>
            </div>
            
            <!-- Tag Cloud -->
            <div class="mb-8">
                <h3 class="text-lg font-semibold mb-4 text-[var(--content-text-color)]">Tag Cloud</h3>
                <div class="flex flex-wrap gap-2">
                    {sortedTags.map(([tag, tagPosts]) => (
                        <a 
                            href={url(`/archive/?tag=${encodeURIComponent(tag)}`)}
                            class={`
                                inline-block px-3 py-1 rounded-full 
                                bg-[var(--card-bg)] hover:bg-[var(--primary)] 
                                text-[var(--content-text-color)] hover:text-white
                                transition-all duration-200 font-medium
                                border border-[var(--border-color)] hover:border-[var(--primary)]
                                ${getTagSizeClass(tagPosts.length, maxTagCount)}
                            `}
                            title={`${tagPosts.length} post${tagPosts.length > 1 ? 's' : ''}`}
                        >
                            #{tag}
                            <span class="ml-1 text-xs opacity-75">
                                ({tagPosts.length})
                            </span>
                        </a>
                    ))}
                </div>
            </div>
            
            <!-- Tag List -->
            <div>
                <h3 class="text-lg font-semibold mb-4 text-[var(--content-text-color)]">All Tags</h3>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    {sortedTags.map(([tag, tagPosts]) => (
                        <div class="bg-[var(--card-bg)] hover:bg-[var(--hover-color)] rounded-lg p-4 transition-colors duration-200">
                            <div class="flex items-center justify-between mb-2">
                                <h4 class="text-base font-semibold text-[var(--primary)] flex items-center">
                                    <i class="fa-solid fa-tag text-xs mr-2 opacity-70"></i>
                                    #{tag}
                                </h4>
                                <span class="bg-[var(--primary)] text-white text-xs px-2 py-1 rounded-full">
                                    {tagPosts.length}
                                </span>
                            </div>
                            
                            <div class="space-y-1">
                                {tagPosts.slice(0, 2).map((post: any) => (
                                    <a 
                                        href={url(`/posts/${post.slug}/`)}
                                        class="block text-sm text-[var(--content-text-color)] hover:text-[var(--primary)] transition-colors duration-200 truncate"
                                    >
                                        {post.data.title}
                                    </a>
                                ))}
                                
                                {tagPosts.length > 2 && (
                                    <div class="text-xs text-[var(--meta-text-color)]">
                                        +{tagPosts.length - 2} more posts
                                    </div>
                                )}
                            </div>
                            
                            <div class="mt-3">
                                <a 
                                    href={url(`/archive/?tag=${encodeURIComponent(tag)}`)}
                                    class="text-xs text-[var(--primary)] hover:underline font-medium"
                                >
                                    View all â†’
                                </a>
                            </div>
                        </div>
                    ))}
                </div>
            </div>
            
            {sortedTags.length === 0 && (
                <div class="text-center py-8 text-[var(--meta-text-color)]">
                    <i class="fa-solid fa-tags text-4xl mb-4 opacity-50"></i>
                    <p>No tags found.</p>
                </div>
            )}
        </div>
    </div>
</MainGridLayout> 